"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[785],{94687:function(e){e.exports=JSON.parse('{"functions":[{"name":"IsActive","desc":"Checks if a given input state is active or not (whether or not a key/button associated with a keybind is pressed or not).\\nReturns nil if the state does not exist","params":[{"name":"stateName","desc":"the state to check","lua_type":"string"}],"returns":[{"desc":"whether or not the state is active","lua_type":"boolean?"}],"function_type":"method","source":{"line":210,"path":"src/client/Controllers/InputController.lua"}}],"properties":[{"name":"_states","desc":":::warning\\nThis property is **private**, but has not been identified as such to make it easier to understand the ``StateChanged`` property regardless of docs settings. \\nYou should use the ``:IsActive()`` method to check states.\\n:::\\n\\nHolds all of the input related states (controlled by pressing/holding an input using any of the selected keybinds).","lua_type":"[string: boolean]","source":{"line":30,"path":"src/client/Controllers/InputController.lua"}},{"name":"StateChanged","desc":"Holds all of the events which are called whenever a state changes.\\n\\nFor instance, you might have a boolean state called ``Jump``, which is also a member of ``InputController._states``.\\nIn this case ``Jump`` would also be a member of ``InputController, and would be fired whenever the ``Jump`` state changes from true -> false, or false -> true.\\n\\nAll events here will be called with:\\n```\\nboolean active -- whether or not the state is active (key/button pressed or not)\\n```","lua_type":"[string: GoodSignal]","tags":["events"],"source":{"line":45,"path":"src/client/Controllers/InputController.lua"}},{"name":"Keybinds","desc":"Holds all of the keybind data. Keybind data is setup such that you have a string equal to any number of ``Enum.UserInputType``\'s or ``Enum.KeyCode``\'s.","lua_type":"[string: any?[]]","source":{"line":51,"path":"src/client/Controllers/InputController.lua"}},{"name":"PrimaryInput","desc":"Explicity states what the primary input is, which can be any one of the following:\\n    - \\"Mouse\\"\\n    - \\"Gamepad\\"\\n    - \\"Touch\\"\\n\\nNote that the keyboard is not considered to be a \\"primary input\\", as it is not directly used to interact with the UI or world space.","lua_type":"string","source":{"line":62,"path":"src/client/Controllers/InputController.lua"}}],"types":[],"name":"InputController","desc":"Controls anything related to player input.","realm":["Client"],"source":{"line":15,"path":"src/client/Controllers/InputController.lua"}}')}}]);