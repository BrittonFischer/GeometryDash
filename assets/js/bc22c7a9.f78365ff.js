"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[57],{84132:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Creates a ClientData object from a given replica.","params":[{"name":"replica","desc":"The Replica to build the Data object off of","lua_type":"Replica"}],"returns":[{"desc":"The created object","lua_type":"ClientData"}],"function_type":"static","source":{"line":66,"path":"src/ReplicatedStorage/Client/Modules/Data.lua"}},{"name":"Destroy","desc":"Destroys the ClientData object and cleans up any objects.","params":[],"returns":[],"function_type":"method","source":{"line":98,"path":"src/ReplicatedStorage/Client/Modules/Data.lua"}},{"name":"Get","desc":"Gets the player data at a given key","params":[{"name":"key","desc":"The key to get the data from in the user\'s profile","lua_type":"string"}],"returns":[{"desc":"The data snagged from the user\'s profile at the given key","lua_type":"any?"}],"function_type":"method","source":{"line":118,"path":"src/ReplicatedStorage/Client/Modules/Data.lua"}}],"properties":[{"name":"_data","desc":"The dictionary containing player data, stored in <key: value> pairs, effectively.. just as a dictionary.","lua_type":"[string: any]","source":{"line":46,"path":"src/ReplicatedStorage/Client/Modules/Data.lua"}},{"name":"Changed","desc":"The event fired whenever the player\'s data changes. It is fired with:\\n```\\nstring -- The key updated\\nany -- The new value at the supplied key\\n```","lua_type":"GoodSignal","source":{"line":56,"path":"src/ReplicatedStorage/Client/Modules/Data.lua"}}],"types":[],"name":"ClientData","desc":"Handles user data on a per-player basis. Also handles data replication to the various clients via ReplicaService.","realm":["Client"],"source":{"line":37,"path":"src/ReplicatedStorage/Client/Modules/Data.lua"}}')}}]);